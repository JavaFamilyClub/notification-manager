<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>club.javafamily</groupId>
    <artifactId>notification-manager</artifactId>
    <packaging>pom</packaging>
    <version>2.3.2-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <description>${project.artifactId}</description>
    <url>https://github.com/JavaFamilyClub/notification-manager</url>

    <!-- 许可证信息 -->
    <licenses>
        <!-- Apache许可证 -->
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    <!-- SCM信息 -> git在github上托管 -->
    <scm>
        <url>https://github.com/JavaFamilyClub/notification-manager</url>
        <connection>scm:git:git://github.com/JavaFamilyClub/notification-manager.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/JavaFamilyClub/notification-manager.git</developerConnection>
    </scm>

    <!-- 开发者信息 -->
    <developers>
        <developer>
            <name>JavaFamily</name>
            <email>javafamily.club@outlook.com</email>
            <organization>JavaFamily</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
        <maven.compiler.source>${jdk.version}</maven.compiler.source>
        <maven.compiler.target>${jdk.version}</maven.compiler.target>
        <spring.boot.version>2.3.2.RELEASE</spring.boot.version>
        <maven.compile.plugin.version>3.6.0</maven.compile.plugin.version>

        <tencent.sdk.version>3.1.111</tencent.sdk.version>
        <ucloud.sms.version>0.8.4.4-release</ucloud.sms.version>

        <javafamily.core.version>2.3.2-beta.4</javafamily.core.version>
        <javafamily.utils.version>2.3.2-beta.4</javafamily.utils.version>
        <javafamily.cache.version>2.3.2-SNAPSHOT</javafamily.cache.version>
        <notification.manager.version>2.3.2-SNAPSHOT</notification.manager.version>
    </properties>

    <modules>
        <module>notification-common</module>

        <module>feishu-notification-spring-boot-starter</module>
        <module>dingtalk-notification-spring-boot-starter</module>
        <module>ucloud-sms-notification-spring-boot-starter</module>
        <module>tencent-sms-notification-spring-boot-starter</module>
        <module>email-notification-spring-boot-starter</module>
        <module>qywechat-notification-spring-boot-starter</module>

        <module>notification-manager-all</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- spring boot dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>javafamily-utils-bom</artifactId>
                <version>${javafamily.utils.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>javafamily-resttemplate-starter</artifactId>
                <version>${javafamily.core.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>javafamily-cache</artifactId>
                <version>${javafamily.cache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.tencentcloudapi</groupId>
                <artifactId>tencentcloud-sdk-java</artifactId>
                <version>${tencent.sdk.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.ucloud</groupId>
                <artifactId>ucloud-sdk-java-usms</artifactId>
                <version>${ucloud.sms.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>notification-common</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>feishu-notification-spring-boot-starter</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>dingtalk-notification-spring-boot-starter</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>ucloud-sms-notification-spring-boot-starter</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>tencent-sms-notification-spring-boot-starter</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>email-notification-spring-boot-starter</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>

            <dependency>
                <groupId>club.javafamily</groupId>
                <artifactId>qywechat-notification-spring-boot-starter</artifactId>
                <version>${notification.manager.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <distributionManagement>
        <snapshotRepository>
            <id>javafamily-central-snapshot</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>javafamily-central-release</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>javafamily-central-snapshot</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <source>${java.version}</source>
                        <additionalJOption>-Xdoclint:none</additionalJOption>
                        <failOnError>false</failOnError>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.8</version>
                    <!-- autoReleaseAfterClose的值为true，则脚本会自动完成在平台上close、release的操作，至此你将成功发布了 -->
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>javafamily-central-release</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>false</useReleaseProfile>
                        <releaseProfiles>release</releaseProfiles>
                        <goals>deploy</goals>
                    </configuration>
                </plugin>

                <!--  必须配置GPG插件用于使用以下配置对组件进行签名 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                            <configuration>
                                <!-- Prevent `gpg` from using pinentry programs -->
                                <gpgArguments>
                                    <arg>--pinentry-mode</arg>
                                    <arg>loopback</arg>
                                </gpgArguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compile.plugin.version}</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <!--                  <encoding>${project.build.sourceEncoding}}</encoding>-->
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${docker-build.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <configLocation>codeStyle/google_checks.xml</configLocation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <consoleOutput>true</consoleOutput>
                        <logViolationsToConsole>true</logViolationsToConsole>
                        <failsOnError>false</failsOnError>
                        <failOnViolation>false</failOnViolation>
                        <violationSeverity>warning</violationSeverity>
                        <linkXRef>false</linkXRef>
                        <skip>true</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.5</version>
                    <configuration>
                        <!-- 设置分析工作的等级，可以为Min、Default 和 Max -->
                        <effort>Default</effort>
                        <!-- Low、Medium 和 High (Low最严格) -->
                        <threshold>Medium</threshold>
                        <failOnError>false</failOnError>
                        <includeTests>true</includeTests>
                        <excludeFilterFile>codeStyle/findbugs-exclude-bugs.xml</excludeFilterFile>
                        <skip>true</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>run-findbugs</id>
                            <phase>package</phase>
                            <goals>
                                <!--检查不通过会构建失败，使用findbugs，失败也会构建-->
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <tasks>
                                    <echo>Copy mvnw file</echo>
                                    <copy file="mvnw" tofile="${basedir}/target/generated-sources/archetype/mvnw"/>
                                    <copy todir="${basedir}/target/generated-sources/archetype/.mvn">
                                        <fileset dir=".mvn">
                                            <include name="**/*"/>
                                        </fileset>
                                    </copy>
                                </tasks>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>${java.version}</source>
                    <additionalJOption>-Xdoclint:none</additionalJOption>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <!-- autoReleaseAfterClose的值为true，则脚本会自动完成在平台上close、release的操作，至此你将成功发布了 -->
                <extensions>true</extensions>
                <configuration>
                    <serverId>javafamily-central-release</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                </configuration>
            </plugin>

            <!--  必须配置GPG插件用于使用以下配置对组件进行签名 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
                            <!-- Prevent `gpg` from using pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
